version: '3.8'

services:
  sql-server:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sql-server
    env_file: .env
    environment:
      SA_PASSWORD: ${SQL_PASSWORD}
      ACCEPT_EULA: "Y"
      MSSQL_PID: ${SQL_PID}
    ports:
      - "1433:1433"
    volumes:
      - sql-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -U ${SQL_USER} -P ${SQL_PASSWORD} -Q 'SELECT 1' || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitMQ
    env_file: .env
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    container_name: backend-api
    build:
      context: .
      dockerfile: Bioskopina/Dockerfile
    env_file: .env
    environment:
      - ConnectionStrings__Default=Server=sql-server;Database=${SQL_DATABASE};User=${SQL_USER};Password=${SQL_PASSWORD};TrustServerCertificate=True;
      - RABBITMQ_HOST=${RABBITMQ_HOST}
      - RABBITMQ_PORT=${RABBITMQ_PORT}
      - SMTP__Server=${SMTP_SERVER}
      - SMTP__Port=${SMTP_PORT}
      - SMTP__Username=${SMTP_USERNAME}
      - SMTP__Password=${SMTP_PASSWORD}
    ports:
      - "5000:80"
    depends_on:
      sql-server:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

volumes:
  sql-data: